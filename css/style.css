/*
COLORS

Primary: #eb2f64
Primary light: #FF3366
Primary dark: #BA265D

Grey light 1: #faf9f9
Grey light 2: #f4f2f2
Grey light 3: #f0eeee
Grey light 4: #ccc

Grey dark 1: #333
Grey dark 2: #777
Grey dark 3: #999

*/
:root {
  --color-primary: #eb2f64;
  --color-primary-light: #FF3366;
  --color-primary-dark: #BA265D;
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;
  --color-grey-dark-1: #333;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;
  --color-white: #fff;
  --shadow-dark: 0 2rem 6rem rgba(0,0,0,.3); }

* {
  padding: 0;
  margin: 0; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%; }

body {
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh; }

.logo {
  height: 3.25rem;
  margin-left: 2rem; }

.search {
  flex: 0 0 40%;
  display: flex;
  justify-content: center;
  align-items: center; }
  .search__input {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border-radius: 100px;
    width: 90%;
    padding: .7rem 2rem;
    border: none;
    margin-right: -3.25rem;
    transition: all .2s; }
    .search__input:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3); }
    .search__input::placeholder-input {
      font-weight: 100;
      color: var(--color-grey-light-3); }
  .search__input:active + .search__button {
    background-color: var(--color-grey-light-3); }
  .search__button {
    border: none;
    background-color: var(--color-grey-light-2); }
    .search__button:focus {
      outline: none; }
    .search__button:active {
      translate: 2px; }
  .search__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); }

.user-nav {
  align-self: stretch;
  display: flex;
  align-items: center; }
  .user-nav > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center; }
  .user-nav > *:hover {
    background-color: var(--color-grey-light-2); }
  .user-nav__icon-box {
    position: relative; }
  .user-nav__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2); }
  .user-nav__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: var(--color-white);
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    display: flex;
    justify-content: center;
    align-items: center; }
  .user-nav__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem; }

/*

while (dev)
	always use bg-color hack like Jonas does, his fav is orangered.

img
	for images you just put height and width adjusts auto.
	then by br = 50% it forms a circle

svg 
	you can size 'em by height and width 

input fields
	typograpy -> ff + fs + color all should be set to inherit cause default styles don't inherit. It should be explicit.
	appearance -> bc + br + width and height(if there) in % mostly 
	box -> pad + bor + mar


*/
.container {
  max-width: 120rem;
  min-height: 100vh;
  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);
  margin: 8rem auto; }

.header {
  height: 7rem;
  background-color: var(--color-white);
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 1.4rem; }

.content {
  display: flex; }

.sidebar {
  flex: 0 0 18%;
  background-color: var(--color-grey-dark-1); }

.hotel-view {
  background-color: var(--color-white);
  flex: 1; }
